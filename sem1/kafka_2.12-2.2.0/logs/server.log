[2019-08-29 15:00:01,076] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:03,086] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:04,655] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:06,658] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:08,363] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:10,365] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:11,587] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:13,589] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:15,508] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:17,510] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:18,850] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:20,856] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:22,395] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:24,398] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:26,078] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:28,083] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:29,380] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:31,387] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:33,369] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:35,377] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:36,869] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:38,876] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:40,275] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:42,280] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:44,009] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:46,014] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:48,017] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:50,023] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:51,352] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:53,358] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:54,574] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:56,579] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:00:58,331] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:00,338] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:02,354] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:04,358] INFO Socket error occurred: localhost/127.0.0.1:2181: Connection refused (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:06,092] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:08,098] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:08,121] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100000fd48e0002, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:08,121] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-08-29 15:01:08,122] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-08-29 15:01:08,146] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59128-6 (kafka.network.Processor)
[2019-08-29 15:01:08,159] INFO [KafkaServer id=0] Controlled shutdown succeeded (kafka.server.KafkaServer)
[2019-08-29 15:01:08,161] INFO [/config/changes-event-process-thread]: Shutting down (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-08-29 15:01:08,162] INFO [/config/changes-event-process-thread]: Stopped (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-08-29 15:01:08,162] INFO [/config/changes-event-process-thread]: Shutdown completed (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-08-29 15:01:08,162] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServer)
[2019-08-29 15:01:08,169] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServer)
[2019-08-29 15:01:08,169] INFO [data-plane Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2019-08-29 15:01:08,170] INFO [data-plane Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2019-08-29 15:01:08,173] INFO [KafkaApi-0] Shutdown complete. (kafka.server.KafkaApis)
[2019-08-29 15:01:08,173] INFO [ExpirationReaper-0-topic]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,344] INFO [ExpirationReaper-0-topic]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,344] INFO [ExpirationReaper-0-topic]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,349] INFO [TransactionCoordinator id=0] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-08-29 15:01:08,350] INFO [ProducerId Manager 0]: Shutdown complete: last producerId assigned 8000 (kafka.coordinator.transaction.ProducerIdManager)
[2019-08-29 15:01:08,350] INFO [Transaction State Manager 0]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
[2019-08-29 15:01:08,350] INFO [Transaction Marker Channel Manager 0]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-08-29 15:01:08,350] INFO [Transaction Marker Channel Manager 0]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-08-29 15:01:08,350] INFO [Transaction Marker Channel Manager 0]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-08-29 15:01:08,351] INFO [TransactionCoordinator id=0] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-08-29 15:01:08,351] INFO [GroupCoordinator 0]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
[2019-08-29 15:01:08,351] INFO [ExpirationReaper-0-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,545] INFO [ExpirationReaper-0-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,545] INFO [ExpirationReaper-0-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,546] INFO [ExpirationReaper-0-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,745] INFO [ExpirationReaper-0-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,745] INFO [ExpirationReaper-0-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,745] INFO [GroupCoordinator 0]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
[2019-08-29 15:01:08,746] INFO [ReplicaManager broker=0] Shutting down (kafka.server.ReplicaManager)
[2019-08-29 15:01:08,746] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-08-29 15:01:08,746] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-08-29 15:01:08,746] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-08-29 15:01:08,747] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2019-08-29 15:01:08,747] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2019-08-29 15:01:08,748] INFO [ReplicaAlterLogDirsManager on broker 0] shutting down (kafka.server.ReplicaAlterLogDirsManager)
[2019-08-29 15:01:08,748] INFO [ReplicaAlterLogDirsManager on broker 0] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
[2019-08-29 15:01:08,748] INFO [ExpirationReaper-0-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,945] INFO [ExpirationReaper-0-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,945] INFO [ExpirationReaper-0-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:08,946] INFO [ExpirationReaper-0-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,147] INFO [ExpirationReaper-0-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,147] INFO [ExpirationReaper-0-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,147] INFO [ExpirationReaper-0-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,346] INFO [ExpirationReaper-0-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,346] INFO [ExpirationReaper-0-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,347] INFO [ExpirationReaper-0-ElectPreferredLeader]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,547] INFO [ExpirationReaper-0-ElectPreferredLeader]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,547] INFO [ExpirationReaper-0-ElectPreferredLeader]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-08-29 15:01:09,566] INFO [ReplicaManager broker=0] Shut down completely (kafka.server.ReplicaManager)
[2019-08-29 15:01:09,566] INFO Shutting down. (kafka.log.LogManager)
[2019-08-29 15:01:09,574] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,577] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,583] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,583] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,586] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,586] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,588] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,589] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,592] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,592] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,594] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,595] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,597] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,598] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,600] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,600] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,605] INFO [ProducerStateManager partition=tdn-systrk-0] Writing producer snapshot at offset 5 (kafka.log.ProducerStateManager)
[2019-08-29 15:01:09,607] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,608] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,610] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,610] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,613] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,613] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,615] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,616] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,619] INFO [ProducerStateManager partition=__consumer_offsets-35] Writing producer snapshot at offset 2 (kafka.log.ProducerStateManager)
[2019-08-29 15:01:09,620] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,621] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,625] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,627] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,631] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,632] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,637] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,638] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,644] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,644] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,647] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,647] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,649] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,649] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,651] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,652] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,654] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,655] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,656] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,657] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,660] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,662] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,665] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,667] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,670] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,671] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,673] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,674] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,676] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,677] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,680] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,683] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,686] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,687] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,692] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,693] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,696] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,697] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,699] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,699] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,701] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,702] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,704] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,705] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,707] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,708] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,709] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,710] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,712] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,712] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,714] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,714] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,716] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,717] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,719] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,719] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,721] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,721] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,723] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,723] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,725] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,726] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,727] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,728] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,729] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,730] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,732] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,732] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,734] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,734] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,736] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,736] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,738] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,738] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,740] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,741] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,743] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,743] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,745] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,745] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-08-29 15:01:09,765] INFO Shutdown complete. (kafka.log.LogManager)
[2019-08-29 15:01:09,771] INFO [ZooKeeperClient] Closing. (kafka.zookeeper.ZooKeeperClient)
[2019-08-29 15:01:09,779] INFO Session: 0x100000fd48e0002 closed (org.apache.zookeeper.ZooKeeper)
[2019-08-29 15:01:09,779] INFO EventThread shut down for session: 0x100000fd48e0002 (org.apache.zookeeper.ClientCnxn)
[2019-08-29 15:01:09,780] INFO [ZooKeeperClient] Closed. (kafka.zookeeper.ZooKeeperClient)
[2019-08-29 15:01:09,780] INFO [ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:10,485] INFO [ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:10,485] INFO [ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:10,486] INFO [ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:11,485] INFO [ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:11,485] INFO [ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:11,486] INFO [ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:12,486] INFO [ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:12,486] INFO [ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-08-29 15:01:12,488] INFO [SocketServer brokerId=0] Shutting down socket server (kafka.network.SocketServer)
[2019-08-29 15:01:12,501] INFO [SocketServer brokerId=0] Shutdown completed (kafka.network.SocketServer)
[2019-08-29 15:01:12,504] INFO [KafkaServer id=0] shut down completed (kafka.server.KafkaServer)
