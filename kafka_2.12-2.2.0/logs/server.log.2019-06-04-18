[2019-06-04 02:00:55,235] INFO Processed session termination for sessionid: 0x100007830fb0002 (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:00:55,244] INFO Closed socket connection for client /127.0.0.1:65199 which had sessionid 0x100007830fb0002 (org.apache.zookeeper.server.NIOServerCnxn)
[2019-06-04 02:01:02,537] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-06-04 02:01:02,886] INFO starting (kafka.server.KafkaServer)
[2019-06-04 02:01:02,887] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-06-04 02:01:02,902] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:01:02,906] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,906] INFO Client environment:host.name=Christian-Inspiron.localdomain (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,906] INFO Client environment:java.version=11.0.3 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,906] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,907] INFO Client environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,907] INFO Client environment:java.class.path=/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-api-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-basic-auth-extension-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-file-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-json-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-runtime-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-transforms-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-annotations-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-core-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-databind-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-datatype-jdk8-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-jaxrs-base-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-jaxrs-json-provider-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-module-jaxb-annotations-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-client-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-continuation-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-http-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-io-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-security-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-server-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-servlet-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-servlets-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-util-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-clients-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-log4j-appender-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-examples-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-scala_2.12-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-test-utils-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-tools-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka_2.12-2.2.0-sources.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka_2.12-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/maven-artifact-3.6.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/rocksdbjni-5.15.10.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-library-2.12.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-logging_2.12-3.9.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-reflect-2.12.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zkclient-0.11.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zstd-jni-1.3.8-1.jar (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,911] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,911] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,911] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,911] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,911] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,911] INFO Client environment:os.version=4.4.0-17763-Microsoft (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,912] INFO Client environment:user.name=christian (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,912] INFO Client environment:user.home=/home/christian (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,912] INFO Client environment:user.dir=/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,913] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@69c81773 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:02,923] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:01:02,923] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:01:02,928] INFO Accepted socket connection from /127.0.0.1:50205 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-06-04 02:01:02,928] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:01:02,931] INFO Client attempting to establish new session at /127.0.0.1:50205 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 02:01:02,936] INFO Established session 0x100007830fb0003 with negotiated timeout 6000 for client /127.0.0.1:50205 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 02:01:02,939] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100007830fb0003, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:01:02,944] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:01:02,973] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x1 zxid:0x11a txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,982] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x2 zxid:0x11b txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,985] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x3 zxid:0x11c txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,988] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x4 zxid:0x11d txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,990] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x5 zxid:0x11e txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,993] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x6 zxid:0x11f txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,996] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x7 zxid:0x120 txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:02,999] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x8 zxid:0x121 txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:03,001] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0x9 zxid:0x122 txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:03,004] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0xa zxid:0x123 txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:03,007] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0xb zxid:0x124 txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:03,010] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0xc zxid:0x125 txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:03,012] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0003 type:create cxid:0xd zxid:0x126 txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:03,134] INFO Cluster ID = eSotZ3p7R9WkH6FL3yanHA (kafka.server.KafkaServer)
[2019-06-04 02:01:03,177] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.2-IV1
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.2-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = [DEFAULT]
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-06-04 02:01:03,197] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.2-IV1
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.2-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = [DEFAULT]
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-06-04 02:01:03,228] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:01:03,228] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:01:03,230] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:01:03,254] INFO Loading logs. (kafka.log.LogManager)
[2019-06-04 02:01:03,320] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,344] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 70 ms (kafka.log.Log)
[2019-06-04 02:01:03,363] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,364] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-06-04 02:01:03,374] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,374] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,383] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,383] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,392] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,392] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,401] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,402] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-06-04 02:01:03,410] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,411] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,420] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,420] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,428] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,429] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,437] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,438] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,446] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,447] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,454] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,455] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,463] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,463] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,473] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,475] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2019-06-04 02:01:03,488] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,489] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2019-06-04 02:01:03,495] WARN [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Found a corrupted index file corresponding to log file /tmp/kafka-logs/__consumer_offsets-22/00000000000000000000.log due to Corrupt time index found, time index file (/tmp/kafka-logs/__consumer_offsets-22/00000000000000000000.timeindex) has non-zero size but the last timestamp is 0 which is less than the first timestamp 1559612896225}, recovering segment and rebuilding index files... (kafka.log.Log)
[2019-06-04 02:01:03,496] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,513] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.recoverSegment(Log.scala:500)
	at kafka.log.Log.$anonfun$loadSegmentFiles$3(Log.scala:482)
	at scala.collection.TraversableLike$WithFilter.$anonfun$foreach$1(TraversableLike.scala:792)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:198)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:791)
	at kafka.log.Log.loadSegmentFiles(Log.scala:454)
	at kafka.log.Log.$anonfun$loadSegments$1(Log.scala:565)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2024)
	at kafka.log.Log.loadSegments(Log.scala:559)
	at kafka.log.Log.<init>(Log.scala:292)
	at kafka.log.Log$.apply(Log.scala:2158)
	at kafka.log.LogManager.loadLog(LogManager.scala:275)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:01:03,524] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,525] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,533] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,534] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,542] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,542] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,550] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,551] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,559] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,559] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,568] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,568] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,576] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,576] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,584] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,584] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,592] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,592] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,600] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,600] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,607] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,608] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,616] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,616] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,623] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,624] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,633] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,634] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-06-04 02:01:03,641] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,641] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,652] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,654] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2019-06-04 02:01:03,670] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,672] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 15 ms (kafka.log.Log)
[2019-06-04 02:01:03,685] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,686] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2019-06-04 02:01:03,694] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,694] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,705] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,706] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2019-06-04 02:01:03,718] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,720] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2019-06-04 02:01:03,728] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,729] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-06-04 02:01:03,736] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,736] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,744] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,745] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,753] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,754] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-06-04 02:01:03,762] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,762] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,773] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,775] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 12 ms (kafka.log.Log)
[2019-06-04 02:01:03,790] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,791] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 13 ms (kafka.log.Log)
[2019-06-04 02:01:03,806] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,808] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 14 ms (kafka.log.Log)
[2019-06-04 02:01:03,819] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,820] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2019-06-04 02:01:03,828] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,829] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-06-04 02:01:03,836] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,836] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,844] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,844] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,851] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,852] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:03,858] INFO [Log partition=alerts-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,859] INFO [Log partition=alerts-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:03,869] INFO [Log partition=tdn-systrk-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:03,870] INFO [Log partition=tdn-systrk-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2019-06-04 02:01:03,876] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.recoverSegment(Log.scala:500)
	at kafka.log.Log.$anonfun$loadSegmentFiles$3(Log.scala:482)
	at scala.collection.TraversableLike$WithFilter.$anonfun$foreach$1(TraversableLike.scala:792)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:198)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:791)
	at kafka.log.Log.loadSegmentFiles(Log.scala:454)
	at kafka.log.Log.$anonfun$loadSegments$1(Log.scala:565)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:2024)
	at kafka.log.Log.loadSegments(Log.scala:559)
	at kafka.log.Log.<init>(Log.scala:292)
	at kafka.log.Log$.apply(Log.scala:2158)
	at kafka.log.LogManager.loadLog(LogManager.scala:275)
	at kafka.log.LogManager.$anonfun$loadLogs$12(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:01:03,883] INFO Logs loading complete in 629 ms. (kafka.log.LogManager)
[2019-06-04 02:01:03,893] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-06-04 02:01:03,895] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-06-04 02:01:04,121] INFO Awaiting socket connections on slocalhost:9092. (kafka.network.Acceptor)
[2019-06-04 02:01:04,143] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2019-06-04 02:01:04,145] INFO [SocketServer brokerId=0] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2019-06-04 02:01:04,163] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:04,165] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:04,166] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:04,167] INFO [ExpirationReaper-0-ElectPreferredLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:04,176] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-06-04 02:01:04,177] INFO [ReplicaManager broker=0] Stopping serving replicas in dir /tmp/kafka-logs (kafka.server.ReplicaManager)
[2019-06-04 02:01:04,181] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaFetcherManager)
[2019-06-04 02:01:04,182] INFO [ReplicaAlterLogDirsManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaAlterLogDirsManager)
[2019-06-04 02:01:04,188] INFO [ReplicaManager broker=0] Broker 0 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory /tmp/kafka-logs. (kafka.server.ReplicaManager)
[2019-06-04 02:01:04,189] INFO Stopping serving logs in dir /tmp/kafka-logs (kafka.log.LogManager)
[2019-06-04 02:01:04,191] ERROR Shutdown broker because all log dirs in /tmp/kafka-logs have failed (kafka.log.LogManager)
[2019-06-04 02:01:04,543] WARN Unable to read additional data from client sessionid 0x100007830fb0003, likely client has closed socket (org.apache.zookeeper.server.NIOServerCnxn)
[2019-06-04 02:01:04,545] INFO Closed socket connection for client /127.0.0.1:50205 which had sessionid 0x100007830fb0003 (org.apache.zookeeper.server.NIOServerCnxn)
[2019-06-04 02:01:11,802] INFO Expiring session 0x100007830fb0003, timeout of 6000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 02:01:11,804] INFO Processed session termination for sessionid: 0x100007830fb0003 (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,135] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-06-04 02:01:18,479] INFO starting (kafka.server.KafkaServer)
[2019-06-04 02:01:18,480] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-06-04 02:01:18,494] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:01:18,498] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,498] INFO Client environment:host.name=Christian-Inspiron.localdomain (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,498] INFO Client environment:java.version=11.0.3 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,498] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,499] INFO Client environment:java.home=/usr/lib/jvm/java-11-openjdk-amd64 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,499] INFO Client environment:java.class.path=/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-api-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-basic-auth-extension-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-file-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-json-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-runtime-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-transforms-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-annotations-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-core-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-databind-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-datatype-jdk8-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-jaxrs-base-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-jaxrs-json-provider-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-module-jaxb-annotations-2.9.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-client-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-continuation-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-http-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-io-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-security-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-server-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-servlet-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-servlets-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-util-9.4.14.v20181114.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-clients-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-log4j-appender-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-examples-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-scala_2.12-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-test-utils-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-tools-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka_2.12-2.2.0-sources.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka_2.12-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/maven-artifact-3.6.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/rocksdbjni-5.15.10.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-library-2.12.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-logging_2.12-3.9.0.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-reflect-2.12.8.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zkclient-0.11.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zstd-jni-1.3.8-1.jar (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,503] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,503] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,503] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,503] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,503] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,504] INFO Client environment:os.version=4.4.0-17763-Microsoft (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,504] INFO Client environment:user.name=christian (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,504] INFO Client environment:user.home=/home/christian (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,504] INFO Client environment:user.dir=/mnt/c/Users/pisch/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,505] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@69c81773 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:01:18,515] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:01:18,515] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:01:18,520] INFO Accepted socket connection from /127.0.0.1:50228 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-06-04 02:01:18,520] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:01:18,523] INFO Client attempting to establish new session at /127.0.0.1:50228 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 02:01:18,531] INFO Established session 0x100007830fb0004 with negotiated timeout 6000 for client /127.0.0.1:50228 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 02:01:18,534] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100007830fb0004, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:01:18,538] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:01:18,566] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x1 zxid:0x129 txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,575] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x2 zxid:0x12a txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,578] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x3 zxid:0x12b txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,581] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x4 zxid:0x12c txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,586] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x5 zxid:0x12d txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,591] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x6 zxid:0x12e txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,595] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x7 zxid:0x12f txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,599] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x8 zxid:0x130 txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,603] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0x9 zxid:0x131 txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,606] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0xa zxid:0x132 txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,610] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0xb zxid:0x133 txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,614] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0xc zxid:0x134 txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,617] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:create cxid:0xd zxid:0x135 txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:18,747] INFO Cluster ID = eSotZ3p7R9WkH6FL3yanHA (kafka.server.KafkaServer)
[2019-06-04 02:01:18,750] WARN No meta.properties file under dir /tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2019-06-04 02:01:18,788] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.2-IV1
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.2-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = [DEFAULT]
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-06-04 02:01:18,808] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.2-IV1
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.2-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = [DEFAULT]
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-06-04 02:01:18,841] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:01:18,841] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:01:18,842] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:01:18,864] INFO Log directory /tmp/kafka-logs not found, creating it. (kafka.log.LogManager)
[2019-06-04 02:01:18,877] INFO Loading logs. (kafka.log.LogManager)
[2019-06-04 02:01:18,888] INFO Logs loading complete in 11 ms. (kafka.log.LogManager)
[2019-06-04 02:01:18,900] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-06-04 02:01:18,903] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-06-04 02:01:19,199] INFO Awaiting socket connections on slocalhost:9092. (kafka.network.Acceptor)
[2019-06-04 02:01:19,229] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2019-06-04 02:01:19,231] INFO [SocketServer brokerId=0] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2019-06-04 02:01:19,249] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,251] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,252] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,252] INFO [ExpirationReaper-0-ElectPreferredLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,263] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-06-04 02:01:19,297] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.zk.KafkaZkClient)
[2019-06-04 02:01:19,309] INFO Stat of the created znode at /brokers/ids/0 is: 310,310,1559613679303,1559613679303,1,0,0,72058110255759364,188,0,310
 (kafka.zk.KafkaZkClient)
[2019-06-04 02:01:19,309] INFO Registered broker 0 at path /brokers/ids/0 with addresses: ArrayBuffer(EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 310 (kafka.zk.KafkaZkClient)
[2019-06-04 02:01:19,310] WARN No meta.properties file under dir /tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2019-06-04 02:01:19,348] INFO [ExpirationReaper-0-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,351] INFO [ExpirationReaper-0-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,352] INFO [ExpirationReaper-0-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:01:19,370] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:01:19,372] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:01:19,377] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 5 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:19,387] INFO [ProducerId Manager 0]: Acquired new producerId block (brokerId:0,blockStartProducerId:3000,blockEndProducerId:3999) by writing to Zk with path version 4 (kafka.coordinator.transaction.ProducerIdManager)
[2019-06-04 02:01:19,409] INFO [TransactionCoordinator id=0] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-06-04 02:01:19,412] INFO [Transaction Marker Channel Manager 0]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-06-04 02:01:19,412] INFO [TransactionCoordinator id=0] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-06-04 02:01:19,447] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-06-04 02:01:19,466] INFO [SocketServer brokerId=0] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2019-06-04 02:01:19,476] INFO Kafka version: 2.2.0 (org.apache.kafka.common.utils.AppInfoParser)
[2019-06-04 02:01:19,476] INFO Kafka commitId: 05fcfde8f69b0349 (org.apache.kafka.common.utils.AppInfoParser)
[2019-06-04 02:01:19,479] INFO [KafkaServer id=0] started (kafka.server.KafkaServer)
[2019-06-04 02:01:19,507] INFO Got user-level KeeperException when processing sessionid:0x100007830fb0004 type:multi cxid:0x6b zxid:0x139 txntype:-1 reqpath:n/a aborting remaining multi ops. Error Path:/admin/preferred_replica_election Error:KeeperErrorCode = NoNode for /admin/preferred_replica_election (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:01:19,548] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-8, __consumer_offsets-21, alerts-0, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, tdn-systrk-0, __consumer_offsets-9, __consumer_offsets-46, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-37, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2019-06-04 02:01:19,601] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,608] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 44 ms (kafka.log.Log)
[2019-06-04 02:01:19,610] INFO Created log for partition __consumer_offsets-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,612] INFO [Partition __consumer_offsets-0 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
[2019-06-04 02:01:19,614] INFO Replica loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,616] INFO [Partition __consumer_offsets-0 broker=0] __consumer_offsets-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,640] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,642] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:19,643] INFO Created log for partition __consumer_offsets-29 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,643] INFO [Partition __consumer_offsets-29 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
[2019-06-04 02:01:19,644] INFO Replica loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,644] INFO [Partition __consumer_offsets-29 broker=0] __consumer_offsets-29 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,656] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,657] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:19,658] INFO Created log for partition __consumer_offsets-48 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,659] INFO [Partition __consumer_offsets-48 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
[2019-06-04 02:01:19,659] INFO Replica loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,660] INFO [Partition __consumer_offsets-48 broker=0] __consumer_offsets-48 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,669] INFO [Log partition=alerts-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,670] INFO [Log partition=alerts-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2019-06-04 02:01:19,671] INFO Created log for partition alerts-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.bytes -> 1073741824, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,672] INFO [Partition alerts-0 broker=0] No checkpointed highwatermark is found for partition alerts-0 (kafka.cluster.Partition)
[2019-06-04 02:01:19,673] INFO Replica loaded for partition alerts-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,673] INFO [Partition alerts-0 broker=0] alerts-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,682] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,683] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,684] INFO Created log for partition __consumer_offsets-10 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,684] INFO [Partition __consumer_offsets-10 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-10 (kafka.cluster.Partition)
[2019-06-04 02:01:19,685] INFO Replica loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,685] INFO [Partition __consumer_offsets-10 broker=0] __consumer_offsets-10 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,694] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,695] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2019-06-04 02:01:19,696] INFO Created log for partition __consumer_offsets-45 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,697] INFO [Partition __consumer_offsets-45 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition)
[2019-06-04 02:01:19,697] INFO Replica loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,697] INFO [Partition __consumer_offsets-45 broker=0] __consumer_offsets-45 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,707] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,708] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,708] INFO Created log for partition __consumer_offsets-26 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,709] INFO [Partition __consumer_offsets-26 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
[2019-06-04 02:01:19,709] INFO Replica loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,709] INFO [Partition __consumer_offsets-26 broker=0] __consumer_offsets-26 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,719] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,720] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,721] INFO Created log for partition __consumer_offsets-7 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,722] INFO [Partition __consumer_offsets-7 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-7 (kafka.cluster.Partition)
[2019-06-04 02:01:19,722] INFO Replica loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,722] INFO [Partition __consumer_offsets-7 broker=0] __consumer_offsets-7 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,732] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,733] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,733] INFO Created log for partition __consumer_offsets-42 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,734] INFO [Partition __consumer_offsets-42 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition)
[2019-06-04 02:01:19,734] INFO Replica loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,735] INFO [Partition __consumer_offsets-42 broker=0] __consumer_offsets-42 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,752] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,754] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:19,756] INFO Created log for partition __consumer_offsets-4 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,758] INFO [Partition __consumer_offsets-4 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
[2019-06-04 02:01:19,758] INFO Replica loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,759] INFO [Partition __consumer_offsets-4 broker=0] __consumer_offsets-4 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,770] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,771] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:19,772] INFO Created log for partition __consumer_offsets-23 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,775] INFO [Partition __consumer_offsets-23 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
[2019-06-04 02:01:19,775] INFO Replica loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,775] INFO [Partition __consumer_offsets-23 broker=0] __consumer_offsets-23 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,785] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,785] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2019-06-04 02:01:19,786] INFO Created log for partition __consumer_offsets-1 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,787] INFO [Partition __consumer_offsets-1 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,787] INFO Replica loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,787] INFO [Partition __consumer_offsets-1 broker=0] __consumer_offsets-1 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,797] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,798] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2019-06-04 02:01:19,799] INFO Created log for partition __consumer_offsets-39 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,800] INFO [Partition __consumer_offsets-39 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition)
[2019-06-04 02:01:19,800] INFO Replica loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,801] INFO [Partition __consumer_offsets-39 broker=0] __consumer_offsets-39 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,811] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,812] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,813] INFO Created log for partition __consumer_offsets-20 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,814] INFO [Partition __consumer_offsets-20 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
[2019-06-04 02:01:19,814] INFO Replica loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,814] INFO [Partition __consumer_offsets-20 broker=0] __consumer_offsets-20 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,824] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,825] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:19,826] INFO Created log for partition __consumer_offsets-17 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,827] INFO [Partition __consumer_offsets-17 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
[2019-06-04 02:01:19,827] INFO Replica loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,827] INFO [Partition __consumer_offsets-17 broker=0] __consumer_offsets-17 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,847] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,848] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,849] INFO Created log for partition __consumer_offsets-36 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,850] INFO [Partition __consumer_offsets-36 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
[2019-06-04 02:01:19,850] INFO Replica loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,850] INFO [Partition __consumer_offsets-36 broker=0] __consumer_offsets-36 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,861] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,861] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,862] INFO Created log for partition __consumer_offsets-14 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,863] INFO [Partition __consumer_offsets-14 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
[2019-06-04 02:01:19,863] INFO Replica loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,863] INFO [Partition __consumer_offsets-14 broker=0] __consumer_offsets-14 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,873] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,874] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,875] INFO Created log for partition __consumer_offsets-33 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,876] INFO [Partition __consumer_offsets-33 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition)
[2019-06-04 02:01:19,876] INFO Replica loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,876] INFO [Partition __consumer_offsets-33 broker=0] __consumer_offsets-33 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,886] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,887] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,887] INFO Created log for partition __consumer_offsets-49 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,889] INFO [Partition __consumer_offsets-49 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition)
[2019-06-04 02:01:19,889] INFO Replica loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,890] INFO [Partition __consumer_offsets-49 broker=0] __consumer_offsets-49 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,900] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,901] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,902] INFO Created log for partition __consumer_offsets-11 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,902] INFO [Partition __consumer_offsets-11 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
[2019-06-04 02:01:19,903] INFO Replica loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,903] INFO [Partition __consumer_offsets-11 broker=0] __consumer_offsets-11 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,913] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,914] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,914] INFO Created log for partition __consumer_offsets-30 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,915] INFO [Partition __consumer_offsets-30 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition)
[2019-06-04 02:01:19,915] INFO Replica loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,915] INFO [Partition __consumer_offsets-30 broker=0] __consumer_offsets-30 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,926] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,927] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:19,928] INFO Created log for partition __consumer_offsets-46 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,929] INFO [Partition __consumer_offsets-46 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-46 (kafka.cluster.Partition)
[2019-06-04 02:01:19,929] INFO Replica loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,929] INFO [Partition __consumer_offsets-46 broker=0] __consumer_offsets-46 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,939] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,940] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,941] INFO Created log for partition __consumer_offsets-27 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,942] INFO [Partition __consumer_offsets-27 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition)
[2019-06-04 02:01:19,942] INFO Replica loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,942] INFO [Partition __consumer_offsets-27 broker=0] __consumer_offsets-27 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,952] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,953] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,954] INFO Created log for partition __consumer_offsets-8 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,954] INFO [Partition __consumer_offsets-8 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
[2019-06-04 02:01:19,955] INFO Replica loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,955] INFO [Partition __consumer_offsets-8 broker=0] __consumer_offsets-8 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,967] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,968] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,969] INFO Created log for partition __consumer_offsets-24 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,970] INFO [Partition __consumer_offsets-24 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
[2019-06-04 02:01:19,970] INFO Replica loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,970] INFO [Partition __consumer_offsets-24 broker=0] __consumer_offsets-24 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,980] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,981] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,982] INFO Created log for partition __consumer_offsets-43 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,982] INFO [Partition __consumer_offsets-43 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-43 (kafka.cluster.Partition)
[2019-06-04 02:01:19,983] INFO Replica loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,983] INFO [Partition __consumer_offsets-43 broker=0] __consumer_offsets-43 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:19,992] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:19,993] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:19,994] INFO Created log for partition __consumer_offsets-5 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:19,994] INFO [Partition __consumer_offsets-5 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
[2019-06-04 02:01:19,994] INFO Replica loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:19,995] INFO [Partition __consumer_offsets-5 broker=0] __consumer_offsets-5 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,013] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,015] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:20,016] INFO Created log for partition __consumer_offsets-21 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,017] INFO [Partition __consumer_offsets-21 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition)
[2019-06-04 02:01:20,017] INFO Replica loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,018] INFO [Partition __consumer_offsets-21 broker=0] __consumer_offsets-21 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,029] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,030] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,030] INFO Created log for partition __consumer_offsets-2 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,031] INFO [Partition __consumer_offsets-2 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
[2019-06-04 02:01:20,031] INFO Replica loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,031] INFO [Partition __consumer_offsets-2 broker=0] __consumer_offsets-2 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,040] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,041] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,042] INFO Created log for partition __consumer_offsets-40 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,043] INFO [Partition __consumer_offsets-40 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
[2019-06-04 02:01:20,043] INFO Replica loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,044] INFO [Partition __consumer_offsets-40 broker=0] __consumer_offsets-40 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,053] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,054] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,055] INFO Created log for partition __consumer_offsets-37 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,056] INFO [Partition __consumer_offsets-37 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-37 (kafka.cluster.Partition)
[2019-06-04 02:01:20,056] INFO Replica loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,057] INFO [Partition __consumer_offsets-37 broker=0] __consumer_offsets-37 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,066] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,067] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,068] INFO Created log for partition __consumer_offsets-18 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,069] INFO [Partition __consumer_offsets-18 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition)
[2019-06-04 02:01:20,069] INFO Replica loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,069] INFO [Partition __consumer_offsets-18 broker=0] __consumer_offsets-18 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,080] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,081] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,081] INFO Created log for partition __consumer_offsets-34 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,082] INFO [Partition __consumer_offsets-34 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-34 (kafka.cluster.Partition)
[2019-06-04 02:01:20,082] INFO Replica loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,082] INFO [Partition __consumer_offsets-34 broker=0] __consumer_offsets-34 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,093] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,094] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:20,095] INFO Created log for partition __consumer_offsets-15 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,095] INFO [Partition __consumer_offsets-15 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition)
[2019-06-04 02:01:20,095] INFO Replica loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,096] INFO [Partition __consumer_offsets-15 broker=0] __consumer_offsets-15 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,105] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,106] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,107] INFO Created log for partition __consumer_offsets-12 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,108] INFO [Partition __consumer_offsets-12 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
[2019-06-04 02:01:20,108] INFO Replica loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,109] INFO [Partition __consumer_offsets-12 broker=0] __consumer_offsets-12 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,119] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,119] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2019-06-04 02:01:20,120] INFO Created log for partition __consumer_offsets-31 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,121] INFO [Partition __consumer_offsets-31 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-31 (kafka.cluster.Partition)
[2019-06-04 02:01:20,121] INFO Replica loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,121] INFO [Partition __consumer_offsets-31 broker=0] __consumer_offsets-31 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,134] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,134] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
[2019-06-04 02:01:20,135] INFO Created log for partition __consumer_offsets-9 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,136] INFO [Partition __consumer_offsets-9 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition)
[2019-06-04 02:01:20,136] INFO Replica loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,136] INFO [Partition __consumer_offsets-9 broker=0] __consumer_offsets-9 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,147] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,148] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,148] INFO Created log for partition __consumer_offsets-47 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,149] INFO [Partition __consumer_offsets-47 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
[2019-06-04 02:01:20,149] INFO Replica loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,149] INFO [Partition __consumer_offsets-47 broker=0] __consumer_offsets-47 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,160] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,161] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,161] INFO Created log for partition __consumer_offsets-19 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,162] INFO [Partition __consumer_offsets-19 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-19 (kafka.cluster.Partition)
[2019-06-04 02:01:20,162] INFO Replica loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,163] INFO [Partition __consumer_offsets-19 broker=0] __consumer_offsets-19 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,181] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,183] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:20,184] INFO Created log for partition __consumer_offsets-28 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,185] INFO [Partition __consumer_offsets-28 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
[2019-06-04 02:01:20,185] INFO Replica loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,186] INFO [Partition __consumer_offsets-28 broker=0] __consumer_offsets-28 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,197] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,198] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,198] INFO Created log for partition __consumer_offsets-38 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,199] INFO [Partition __consumer_offsets-38 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
[2019-06-04 02:01:20,199] INFO Replica loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,199] INFO [Partition __consumer_offsets-38 broker=0] __consumer_offsets-38 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,209] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,210] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:20,210] INFO Created log for partition __consumer_offsets-35 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,211] INFO [Partition __consumer_offsets-35 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
[2019-06-04 02:01:20,212] INFO Replica loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,212] INFO [Partition __consumer_offsets-35 broker=0] __consumer_offsets-35 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,229] INFO [Log partition=tdn-systrk-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,230] INFO [Log partition=tdn-systrk-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:20,231] INFO Created log for partition tdn-systrk-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.bytes -> 1073741824, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,233] INFO [Partition tdn-systrk-0 broker=0] No checkpointed highwatermark is found for partition tdn-systrk-0 (kafka.cluster.Partition)
[2019-06-04 02:01:20,233] INFO Replica loaded for partition tdn-systrk-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,233] INFO [Partition tdn-systrk-0 broker=0] tdn-systrk-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,244] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,245] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,246] INFO Created log for partition __consumer_offsets-44 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,246] INFO [Partition __consumer_offsets-44 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
[2019-06-04 02:01:20,246] INFO Replica loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,247] INFO [Partition __consumer_offsets-44 broker=0] __consumer_offsets-44 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,264] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,266] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-06-04 02:01:20,267] INFO Created log for partition __consumer_offsets-6 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,268] INFO [Partition __consumer_offsets-6 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition)
[2019-06-04 02:01:20,268] INFO Replica loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,269] INFO [Partition __consumer_offsets-6 broker=0] __consumer_offsets-6 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,280] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,281] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,282] INFO Created log for partition __consumer_offsets-25 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,282] INFO [Partition __consumer_offsets-25 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-25 (kafka.cluster.Partition)
[2019-06-04 02:01:20,283] INFO Replica loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,283] INFO [Partition __consumer_offsets-25 broker=0] __consumer_offsets-25 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,293] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,293] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,294] INFO Created log for partition __consumer_offsets-16 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,295] INFO [Partition __consumer_offsets-16 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
[2019-06-04 02:01:20,296] INFO Replica loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,296] INFO [Partition __consumer_offsets-16 broker=0] __consumer_offsets-16 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,307] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,308] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:20,309] INFO Created log for partition __consumer_offsets-22 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,310] INFO [Partition __consumer_offsets-22 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-22 (kafka.cluster.Partition)
[2019-06-04 02:01:20,310] INFO Replica loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,311] INFO [Partition __consumer_offsets-22 broker=0] __consumer_offsets-22 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,332] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,333] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 12 ms (kafka.log.Log)
[2019-06-04 02:01:20,334] INFO Created log for partition __consumer_offsets-41 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,335] INFO [Partition __consumer_offsets-41 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
[2019-06-04 02:01:20,336] INFO Replica loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,336] INFO [Partition __consumer_offsets-41 broker=0] __consumer_offsets-41 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,347] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,348] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
[2019-06-04 02:01:20,349] INFO Created log for partition __consumer_offsets-32 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,349] INFO [Partition __consumer_offsets-32 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
[2019-06-04 02:01:20,349] INFO Replica loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,350] INFO [Partition __consumer_offsets-32 broker=0] __consumer_offsets-32 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,361] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,362] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 5 ms (kafka.log.Log)
[2019-06-04 02:01:20,363] INFO Created log for partition __consumer_offsets-3 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,364] INFO [Partition __consumer_offsets-3 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition)
[2019-06-04 02:01:20,364] INFO Replica loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,364] INFO [Partition __consumer_offsets-3 broker=0] __consumer_offsets-3 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,374] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-06-04 02:01:20,376] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-06-04 02:01:20,376] INFO Created log for partition __consumer_offsets-13 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.2-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.bytes -> 104857600, segment.ms -> 604800000, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-06-04 02:01:20,377] INFO [Partition __consumer_offsets-13 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-13 (kafka.cluster.Partition)
[2019-06-04 02:01:20,377] INFO Replica loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Replica)
[2019-06-04 02:01:20,377] INFO [Partition __consumer_offsets-13 broker=0] __consumer_offsets-13 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 02:01:20,388] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,389] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,389] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,390] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,390] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,393] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,393] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,393] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,394] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,394] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,394] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,395] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,395] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,395] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,396] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,396] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,396] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,397] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,397] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,397] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,397] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,398] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,398] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,398] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,398] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,398] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,399] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,399] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,399] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,399] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,399] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,400] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,400] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,400] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,400] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,400] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,401] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,401] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,401] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,401] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-22 in 12 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,401] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,403] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,403] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,404] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-25 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,404] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,404] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-28 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,404] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,404] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-31 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,404] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,405] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-34 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,405] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,405] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-37 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,405] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,405] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-40 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,406] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,406] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-43 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,406] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,407] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-46 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,407] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,407] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-49 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,408] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-41 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,408] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-44 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,408] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-47 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,409] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-1 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,409] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-4 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,410] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-7 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,410] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-10 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,410] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-13 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,411] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-16 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,411] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-19 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,411] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-2 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,414] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-5 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,414] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-8 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,414] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-11 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,415] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-14 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,415] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-17 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,416] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-20 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,416] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-23 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,416] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-26 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,417] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-29 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,417] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-32 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,418] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-35 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,418] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-38 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,419] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-0 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,419] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-6 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,420] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-9 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,420] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-12 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,421] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-15 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,421] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-18 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,425] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-21 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,425] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-24 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,426] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-27 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,426] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-30 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,426] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-33 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,427] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-36 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,427] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-39 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,428] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-42 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,428] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-45 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,428] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-48 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:01:20,429] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-3 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 02:02:36,648] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-29705 in state PreparingRebalance with old generation 0 (__consumer_offsets-34) (reason: Adding new member consumer-1-b088c7f1-d2bc-4881-a775-92933078f11d) (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:02:36,652] INFO [GroupCoordinator 0]: Stabilized group console-consumer-29705 generation 1 (__consumer_offsets-34) (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:02:36,657] INFO [GroupCoordinator 0]: Assignment received from leader for group console-consumer-29705 for generation 1 (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:02:37,976] INFO [GroupCoordinator 0]: Member consumer-1-b088c7f1-d2bc-4881-a775-92933078f11d in group console-consumer-29705 has left, removing it from the group (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:02:37,977] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-29705 in state PreparingRebalance with old generation 1 (__consumer_offsets-34) (reason: removing member consumer-1-b088c7f1-d2bc-4881-a775-92933078f11d on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:02:37,978] INFO [GroupCoordinator 0]: Group console-consumer-29705 with generation 2 is now empty (__consumer_offsets-34) (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:05:24,792] INFO Terminating process due to signal SIGHUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2019-06-04 02:05:24,794] INFO [KafkaServer id=0] shutting down (kafka.server.KafkaServer)
[2019-06-04 02:05:24,796] INFO [KafkaServer id=0] Starting controlled shutdown (kafka.server.KafkaServer)
[2019-06-04 02:05:24,827] INFO [KafkaServer id=0] Controlled shutdown succeeded (kafka.server.KafkaServer)
[2019-06-04 02:05:24,832] INFO [/config/changes-event-process-thread]: Shutting down (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-06-04 02:05:24,833] INFO [/config/changes-event-process-thread]: Stopped (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-06-04 02:05:24,833] INFO [/config/changes-event-process-thread]: Shutdown completed (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-06-04 02:05:24,835] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServer)
[2019-06-04 02:05:24,847] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServer)
[2019-06-04 02:05:24,848] INFO [data-plane Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2019-06-04 02:05:24,850] INFO [data-plane Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2019-06-04 02:05:24,854] INFO [KafkaApi-0] Shutdown complete. (kafka.server.KafkaApis)
[2019-06-04 02:05:24,857] INFO [ExpirationReaper-0-topic]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:24,949] INFO [ExpirationReaper-0-topic]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:24,949] INFO [ExpirationReaper-0-topic]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:24,951] INFO [TransactionCoordinator id=0] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-06-04 02:05:24,951] INFO [ProducerId Manager 0]: Shutdown complete: last producerId assigned 3000 (kafka.coordinator.transaction.ProducerIdManager)
[2019-06-04 02:05:24,952] INFO [Transaction State Manager 0]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
[2019-06-04 02:05:24,952] INFO [Transaction Marker Channel Manager 0]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-06-04 02:05:24,952] INFO [Transaction Marker Channel Manager 0]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-06-04 02:05:24,952] INFO [Transaction Marker Channel Manager 0]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-06-04 02:05:24,952] INFO [TransactionCoordinator id=0] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-06-04 02:05:24,953] INFO [GroupCoordinator 0]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:05:24,953] INFO [ExpirationReaper-0-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,003] INFO [ExpirationReaper-0-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,003] INFO [ExpirationReaper-0-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,005] INFO [ExpirationReaper-0-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,058] INFO [ExpirationReaper-0-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,058] INFO [ExpirationReaper-0-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,061] INFO [GroupCoordinator 0]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 02:05:25,064] INFO [ReplicaManager broker=0] Shutting down (kafka.server.ReplicaManager)
[2019-06-04 02:05:25,065] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-06-04 02:05:25,066] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-06-04 02:05:25,066] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-06-04 02:05:25,067] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2019-06-04 02:05:25,069] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2019-06-04 02:05:25,070] INFO [ReplicaAlterLogDirsManager on broker 0] shutting down (kafka.server.ReplicaAlterLogDirsManager)
[2019-06-04 02:05:25,070] INFO [ReplicaAlterLogDirsManager on broker 0] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
[2019-06-04 02:05:25,070] INFO [ExpirationReaper-0-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,075] INFO [ExpirationReaper-0-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,075] INFO [ExpirationReaper-0-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,076] INFO [ExpirationReaper-0-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,252] INFO [ExpirationReaper-0-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,252] INFO [ExpirationReaper-0-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,252] INFO [ExpirationReaper-0-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,452] INFO [ExpirationReaper-0-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,452] INFO [ExpirationReaper-0-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,453] INFO [ExpirationReaper-0-ElectPreferredLeader]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,653] INFO [ExpirationReaper-0-ElectPreferredLeader]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,653] INFO [ExpirationReaper-0-ElectPreferredLeader]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 02:05:25,672] INFO [ReplicaManager broker=0] Shut down completely (kafka.server.ReplicaManager)
[2019-06-04 02:05:25,673] INFO Shutting down. (kafka.log.LogManager)
[2019-06-04 02:05:25,680] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,683] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,686] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,687] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,689] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,690] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,693] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,694] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,696] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,697] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,700] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,701] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,703] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,704] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,706] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,708] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,713] INFO [ProducerStateManager partition=tdn-systrk-0] Writing producer snapshot at offset 1980 (kafka.log.ProducerStateManager)
[2019-06-04 02:05:25,715] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,716] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,718] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,719] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,721] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,722] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,724] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,725] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,727] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,728] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,730] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,731] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,733] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,734] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,736] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,736] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,738] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,739] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,741] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,742] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,744] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,745] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,747] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,748] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,750] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,751] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,753] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,753] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,755] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,756] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,757] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,758] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,761] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,761] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,763] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,764] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,766] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,766] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,768] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,768] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,770] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,771] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,772] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,773] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,775] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,776] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,778] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,779] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,782] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,783] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,786] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,786] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,788] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,789] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,790] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,791] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,794] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,794] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,796] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,797] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,799] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,800] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,802] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,803] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,807] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,809] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,812] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,813] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,815] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,816] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,817] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,818] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,820] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,820] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,822] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,823] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,824] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,827] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,829] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,829] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,832] INFO [ProducerStateManager partition=__consumer_offsets-34] Writing producer snapshot at offset 2 (kafka.log.ProducerStateManager)
[2019-06-04 02:05:25,833] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,834] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,837] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,837] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,839] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,840] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,843] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$2(LogSegment.scala:563)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:563)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,844] WARN Invalid argument (kafka.utils.CoreUtils$)
java.io.IOException: Invalid argument
	at java.base/java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex.$anonfun$resize$1(AbstractIndex.scala:186)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.TimeIndex.super$resize(TimeIndex.scala:189)
	at kafka.log.TimeIndex.$anonfun$resize$1(TimeIndex.scala:189)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.TimeIndex.resize(TimeIndex.scala:189)
	at kafka.log.AbstractIndex.$anonfun$trimToValidSize$1(AbstractIndex.scala:236)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:236)
	at kafka.log.AbstractIndex.close(AbstractIndex.scala:247)
	at kafka.log.LogSegment.$anonfun$close$3(LogSegment.scala:564)
	at kafka.utils.CoreUtils$.swallow(CoreUtils.scala:86)
	at kafka.log.LogSegment.close(LogSegment.scala:564)
	at kafka.log.Log.$anonfun$close$4(Log.scala:747)
	at kafka.log.Log.$anonfun$close$4$adapted(Log.scala:747)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.log.Log.$anonfun$close$3(Log.scala:747)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.log.Log.maybeHandleIOException(Log.scala:2013)
	at kafka.log.Log.close(Log.scala:742)
	at kafka.log.LogManager.$anonfun$shutdown$8(LogManager.scala:458)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2019-06-04 02:05:25,860] INFO Shutdown complete. (kafka.log.LogManager)
[2019-06-04 02:05:25,865] INFO [ZooKeeperClient] Closing. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:05:25,866] INFO Processed session termination for sessionid: 0x100007830fb0004 (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 02:05:25,868] INFO Session: 0x100007830fb0004 closed (org.apache.zookeeper.ZooKeeper)
[2019-06-04 02:05:25,869] INFO Closed socket connection for client /127.0.0.1:50228 which had sessionid 0x100007830fb0004 (org.apache.zookeeper.server.NIOServerCnxn)
[2019-06-04 02:05:25,869] INFO EventThread shut down for session: 0x100007830fb0004 (org.apache.zookeeper.ClientCnxn)
[2019-06-04 02:05:25,869] INFO [ZooKeeperClient] Closed. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 02:05:25,869] INFO [ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:25,950] INFO [ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:25,950] INFO [ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:25,951] INFO [ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:26,950] INFO [ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:26,950] INFO [ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:26,951] INFO [ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:27,951] INFO [ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:27,951] INFO [ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 02:05:27,954] INFO [SocketServer brokerId=0] Shutting down socket server (kafka.network.SocketServer)
[2019-06-04 02:05:27,972] INFO [SocketServer brokerId=0] Shutdown completed (kafka.network.SocketServer)
[2019-06-04 02:05:27,974] INFO [KafkaServer id=0] shut down completed (kafka.server.KafkaServer)
[2019-06-04 08:36:38,304] INFO Reading configuration from: ./config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2019-06-04 08:36:38,317] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2019-06-04 08:36:38,317] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2019-06-04 08:36:38,317] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2019-06-04 08:36:38,317] WARN Either no config or no quorum defined in config, running  in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2019-06-04 08:36:38,333] INFO Reading configuration from: ./config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2019-06-04 08:36:38,334] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2019-06-04 08:36:38,343] INFO Server environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,343] INFO Server environment:host.name=Christian-PC.localdomain (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,343] INFO Server environment:java.version=1.8.0_212 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,344] INFO Server environment:java.vendor=Oracle Corporation (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,344] INFO Server environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,344] INFO Server environment:java.class.path=/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/activation-1.1.1.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/commons-lang3-3.8.1.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-api-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-basic-auth-extension-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-file-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-json-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-runtime-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/connect-transforms-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/guava-20.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-annotations-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-core-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-databind-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-datatype-jdk8-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-jaxrs-base-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-jaxrs-json-provider-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jackson-module-jaxb-annotations-2.9.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.inject-1.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-client-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-common-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jersey-server-2.27.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-client-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-continuation-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-http-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-io-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-security-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-server-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-servlet-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-servlets-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jetty-util-9.4.14.v20181114.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka_2.12-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka_2.12-2.2.0-sources.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-clients-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-log4j-appender-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-examples-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-scala_2.12-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-streams-test-utils-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/kafka-tools-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/log4j-1.2.17.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/maven-artifact-3.6.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/reflections-0.9.11.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/rocksdbjni-5.15.10.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-library-2.12.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-logging_2.12-3.9.0.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/scala-reflect-2.12.8.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zkclient-0.11.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0/bin/../libs/zstd-jni-1.3.8-1.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,348] INFO Server environment:java.library.path=:/home/Christian/.openmpi/lib/:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,349] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,349] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,350] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,350] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,351] INFO Server environment:os.version=4.4.0-17763-Microsoft (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,356] INFO Server environment:user.name=Christian (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,357] INFO Server environment:user.home=/home/Christian (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,358] INFO Server environment:user.dir=/mnt/e/Documents/GitHub/g3-serp2019/kafka_2.12-2.2.0 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,370] INFO tickTime set to 3000 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,371] INFO minSessionTimeout set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,372] INFO maxSessionTimeout set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:36:38,389] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2019-06-04 08:36:38,401] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-06-04 18:07:44,583] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-06-04 18:07:45,541] INFO starting (kafka.server.KafkaServer)
[2019-06-04 18:07:45,542] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-06-04 18:07:45,564] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 18:07:45,571] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,572] INFO Client environment:host.name=Christian-PC.lan (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,572] INFO Client environment:java.version=1.8.0_211 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,572] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,572] INFO Client environment:java.home=C:\Program Files\Java\jre1.8.0_211 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,572] INFO Client environment:java.class.path=E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\activation-1.1.1.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\aopalliance-repackaged-2.5.0-b42.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\argparse4j-0.7.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\audience-annotations-0.5.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\commons-lang3-3.8.1.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\connect-api-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\connect-basic-auth-extension-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\connect-file-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\connect-json-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\connect-runtime-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\connect-transforms-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\guava-20.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\hk2-api-2.5.0-b42.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\hk2-locator-2.5.0-b42.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\hk2-utils-2.5.0-b42.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-annotations-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-core-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-databind-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-datatype-jdk8-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-jaxrs-base-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-jaxrs-json-provider-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jackson-module-jaxb-annotations-2.9.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javassist-3.22.0-CR2.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javax.annotation-api-1.2.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javax.inject-1.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javax.inject-2.5.0-b42.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javax.servlet-api-3.1.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javax.ws.rs-api-2.1.1.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\javax.ws.rs-api-2.1.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jaxb-api-2.3.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-client-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-common-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-container-servlet-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-container-servlet-core-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-hk2-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-media-jaxb-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jersey-server-2.27.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-client-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-continuation-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-http-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-io-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-security-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-server-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-servlet-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-servlets-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jetty-util-9.4.14.v20181114.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\jopt-simple-5.0.4.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-clients-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-log4j-appender-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-streams-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-streams-examples-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-streams-scala_2.12-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-streams-test-utils-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka-tools-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka_2.12-2.2.0-javadoc.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka_2.12-2.2.0-scaladoc.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka_2.12-2.2.0-sources.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka_2.12-2.2.0-test-sources.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka_2.12-2.2.0-test.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\kafka_2.12-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\log4j-1.2.17.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\lz4-java-1.5.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\maven-artifact-3.6.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\metrics-core-2.2.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\osgi-resource-locator-1.0.1.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\plexus-utils-3.1.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\reflections-0.9.11.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\rocksdbjni-5.15.10.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\scala-library-2.12.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\scala-logging_2.12-3.9.0.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\scala-reflect-2.12.8.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\slf4j-api-1.7.25.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\slf4j-log4j12-1.7.25.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\snappy-java-1.1.7.2.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\validation-api-1.1.0.Final.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\zkclient-0.11.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\zookeeper-3.4.13.jar;E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0\libs\zstd-jni-1.3.8-1.jar; (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,577] INFO Client environment:java.library.path=c:\program files (x86)\common files\oracle\java\javapath;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;c:\program files (x86)\common files\oracle\java\javapath;c:\program files (x86)\razer chroma sdk\bin;c:\program files\razer chroma sdk\bin;c:\programdata\oracle\java\javapath;c:\windows\system32;c:\windows;c:\windows\system32\wbem;c:\windows\system32\windowspowershell\v1.0\;e:\program files\amd\ati.ace\core-static;c:\program files (x86)\windows live\shared;c:\program files (x86)\ati technologies\ati.ace\core-static;c:\users\pisch_000\appdata\local\microsoft\windowsapps;e:\program files\nmap;e:\program files\transcriberag\libs;e:\program files\transcriberag\libs\gtkmm\bin;c:\windows\system32\openssh\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\Program Files\FileBot\;C:\Users\pisch_000\AppData\Local\Programs\Python\Python37-32\Scripts\;C:\Users\pisch_000\AppData\Local\Programs\Python\Python37-32\;C:\Users\pisch_000\AppData\Local\Microsoft\WindowsApps;E:\Program Files\Nmap;E:\Program Files\TranscriberAG\libs;E:\Program Files\TranscriberAG\libs\gtkmm\bin;C:\Users\pisch_000\AppData\Local\GitHubDesktop\bin;C:\Users\pisch_000\AppData\Local\Microsoft\WindowsApps;;. (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,581] INFO Client environment:java.io.tmpdir=C:\Users\PISCH_~1\AppData\Local\Temp\ (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,581] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,583] INFO Client environment:os.name=Windows 10 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,584] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,584] INFO Client environment:os.version=10.0 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,585] INFO Client environment:user.name=pisch_000 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,586] INFO Client environment:user.home=C:\Users\pisch_000 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,586] INFO Client environment:user.dir=E:\Documents\GitHub\g3-serp2019\kafka_2.12-2.2.0 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,588] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@769f71a9 (org.apache.zookeeper.ZooKeeper)
[2019-06-04 18:07:45,603] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 18:07:45,603] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-06-04 18:07:45,606] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-06-04 08:37:45,609] INFO Accepted socket connection from /127.0.0.1:44610 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-06-04 08:37:45,614] INFO Client attempting to establish new session at /127.0.0.1:44610 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 08:37:45,616] INFO Creating new log file: log.c27 (org.apache.zookeeper.server.persistence.FileTxnLog)
[2019-06-04 08:37:45,623] INFO Established session 0x10000006aec0000 with negotiated timeout 6000 for client /127.0.0.1:44610 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-06-04 18:07:45,624] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10000006aec0000, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-06-04 18:07:45,629] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-06-04 08:37:45,679] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x1 zxid:0xc28 txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,696] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x2 zxid:0xc29 txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,700] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x3 zxid:0xc2a txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,705] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x4 zxid:0xc2b txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,709] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x5 zxid:0xc2c txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,713] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x6 zxid:0xc2d txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,717] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x7 zxid:0xc2e txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,721] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x8 zxid:0xc2f txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,724] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0x9 zxid:0xc30 txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,727] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0xa zxid:0xc31 txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,731] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0xb zxid:0xc32 txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,735] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0xc zxid:0xc33 txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 08:37:45,738] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:create cxid:0xd zxid:0xc34 txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 18:07:45,865] INFO Cluster ID = tItZSYHnSiyl1gJZF1cBVg (kafka.server.KafkaServer)
[2019-06-04 18:07:46,070] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.2-IV1
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.2-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = [DEFAULT]
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-06-04 18:07:46,085] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.2-IV1
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.2-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = [DEFAULT]
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-06-04 18:07:46,234] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 18:07:46,234] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 18:07:46,238] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-06-04 18:07:46,323] INFO Loading logs. (kafka.log.LogManager)
[2019-06-04 18:07:46,562] INFO [Log partition=systrk-0, dir=E:\tmp\kafka-logs] Loading producer state till offset 2152 with message format version 2 (kafka.log.Log)
[2019-06-04 18:07:46,585] INFO [ProducerStateManager partition=systrk-0] Loading producer state from snapshot file 'E:\tmp\kafka-logs\systrk-0\00000000000000002152.snapshot' (kafka.log.ProducerStateManager)
[2019-06-04 18:07:46,617] INFO [Log partition=systrk-0, dir=E:\tmp\kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 2152 in 263 ms (kafka.log.Log)
[2019-06-04 18:07:46,736] INFO [Log partition=tdn-systrk-0, dir=E:\tmp\kafka-logs] Loading producer state till offset 41963 with message format version 2 (kafka.log.Log)
[2019-06-04 18:07:46,749] INFO [ProducerStateManager partition=tdn-systrk-0] Loading producer state from snapshot file 'E:\tmp\kafka-logs\tdn-systrk-0\00000000000000041963.snapshot' (kafka.log.ProducerStateManager)
[2019-06-04 18:07:46,754] INFO [Log partition=tdn-systrk-0, dir=E:\tmp\kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 41963 in 125 ms (kafka.log.Log)
[2019-06-04 18:07:46,773] INFO Logs loading complete in 450 ms. (kafka.log.LogManager)
[2019-06-04 18:07:46,801] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-06-04 18:07:46,804] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-06-04 18:07:47,094] INFO Awaiting socket connections on slocalhost:9092. (kafka.network.Acceptor)
[2019-06-04 18:07:47,132] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2019-06-04 18:07:47,133] INFO [SocketServer brokerId=0] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2019-06-04 18:07:47,170] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,171] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,172] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,172] INFO [ExpirationReaper-0-ElectPreferredLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,182] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-06-04 18:07:47,238] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.zk.KafkaZkClient)
[2019-06-04 18:07:47,255] INFO Stat of the created znode at /brokers/ids/0 is: 3125,3125,1559637467249,1559637467249,1,0,0,72057595831779328,188,0,3125
 (kafka.zk.KafkaZkClient)
[2019-06-04 18:07:47,256] INFO Registered broker 0 at path /brokers/ids/0 with addresses: ArrayBuffer(EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 3125 (kafka.zk.KafkaZkClient)
[2019-06-04 18:07:47,332] INFO [ExpirationReaper-0-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,337] INFO [ExpirationReaper-0-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,338] INFO [ExpirationReaper-0-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-06-04 18:07:47,386] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 18:07:47,389] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2019-06-04 18:07:47,397] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 7 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 18:07:47,418] INFO [ProducerId Manager 0]: Acquired new producerId block (brokerId:0,blockStartProducerId:4000,blockEndProducerId:4999) by writing to Zk with path version 5 (kafka.coordinator.transaction.ProducerIdManager)
[2019-06-04 18:07:47,451] INFO [TransactionCoordinator id=0] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-06-04 18:07:47,453] INFO [TransactionCoordinator id=0] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-06-04 18:07:47,454] INFO [Transaction Marker Channel Manager 0]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-06-04 18:07:47,504] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-06-04 18:07:47,519] INFO [SocketServer brokerId=0] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2019-06-04 18:07:47,526] INFO Kafka version: 2.2.0 (org.apache.kafka.common.utils.AppInfoParser)
[2019-06-04 18:07:47,526] INFO Kafka commitId: 05fcfde8f69b0349 (org.apache.kafka.common.utils.AppInfoParser)
[2019-06-04 18:07:47,528] INFO [KafkaServer id=0] started (kafka.server.KafkaServer)
[2019-06-04 08:37:47,533] INFO Got user-level KeeperException when processing sessionid:0x10000006aec0000 type:multi cxid:0x36 zxid:0xc38 txntype:-1 reqpath:n/a aborting remaining multi ops. Error Path:/admin/preferred_replica_election Error:KeeperErrorCode = NoNode for /admin/preferred_replica_election (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-06-04 18:07:47,568] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(systrk-0, tdn-systrk-0) (kafka.server.ReplicaFetcherManager)
[2019-06-04 18:07:47,580] INFO Replica loaded for partition systrk-0 with initial high watermark 2152 (kafka.cluster.Replica)
[2019-06-04 18:07:47,583] INFO [Partition systrk-0 broker=0] systrk-0 starts at Leader Epoch 0 from offset 2152. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 18:07:47,594] INFO Replica loaded for partition tdn-systrk-0 with initial high watermark 41963 (kafka.cluster.Replica)
[2019-06-04 18:07:47,594] INFO [Partition tdn-systrk-0 broker=0] tdn-systrk-0 starts at Leader Epoch 0 from offset 41963. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-06-04 18:17:47,391] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 18:27:44,155] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 18:37:44,155] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 18:47:44,155] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-06-04 18:57:44,155] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
